
Documentation Feedback ~ Deliverable #2
Software Requirements Specification
Initial Development Schedule
CMSI 4071 Fall 2025
=======================================

COMPONENT BREAKDOWN:
====================
Great introduction section and the diagram is very helpful and informative
to the user.  I love the use of color ~ very imaginative!

FUNCTIONAL REQUIREMENTS:
========================
Strengths:
   Clear organization by CSC: Frontend, Backend, Authentication, and
      Hosting & Infrastructure are well-defined.
   Detailed user-facing features:
   Discover page: search, filtering, map integration.
   Cafe page: reviews, metadata, charts.
   User logging: saving and listing visited cafes.
   Backend logic: Includes database schema and API endpoints for cafes,
      reviews, and user data.
   Authentication: Secure login/logout and token storage requirements
      are specified.

Gaps / Suggestions:
   Error handling: No explicit requirements for invalid inputs, failed
      API calls, or database errors.
   Security beyond authentication: Missing encryption standards for data
      in transit and at rest, and compliance considerations (e.g., GDPR).
   Accessibility: No mention of screen reader support, color contrast, or
      keyboard navigation.
   Offline mode: No requirements for app behavior without network
      connectivity.
   Notifications: No functional requirements for alerts or push
      notifications for updates.

PERFORMANCE REQUIREMENTS:
=========================
Strengths:
   Quantifiable metrics provided:
      Search/filter results: =3 seconds.
      Cafe page load: =2 seconds.
      Login: =3 seconds.
      Visualization rendering: =5 seconds.
   Scalability: Supports 5,000 concurrent users.
   Availability: 99% uptime requirement.
   Storage: Handles up to 1M cafes and 10M reviews.

Gaps / Suggestions:
   Stress/load testing: No upper limits for peak traffic or database
      query performance under heavy load.
   Network variability: No requirements for degraded performance under
      high latency or packet loss.
   Recovery performance: Missing time limits for reconnecting after
      disconnection or restoring sessions.
   Mobile responsiveness: Performance metrics assume desktop; no mention
      of mobile optimization.

ENVIRONMENT REQUIREMENTS:
=========================
Strengths:
   Development environment: Hardware (CPU, RAM, storage), OS, frameworks
      (Next.js), database (PostgreSQL), hosting tools, and APIs are
         clearly listed.
   Execution environment: Specifies hosting platforms (Vercel, Supabase),
      cloud resources, and software stack.
   CI/CD and deployment: Mentions automatic redeployment pipelines.

Gaps / Suggestions:
   Testing environment: No requirements for automated testing tools or QA
      processes.
   Security environment: No mention of HTTPS/TLS enforcement beyond a
      brief note; lacks details on secure credential storage.
   Monitoring and logging: No requirements for analytics, error logging,
      or performance monitoring tools.
   Future scalability: No guidance for supporting additional regions or
      multi-cloud deployments.


OVERALL ASSESSMENT:
   Category                          Points
   Component Breakdown                 1/1
   Functional Requirements             4/4
   Performance Requirements            2/2
   Environment Requirements            1/1
                                     =====
   Subtotal                            8/8
   Preliminary Schedule                2/2
   ------------------------------------------------------
   Total Percentage:   10/10 = 100% which is an A-plus


Overall Assessment
   Functional requirements: Strong coverage of core features and system
      logic, but missing accessibility, security, error handling, and
      offline considerations.
   Performance requirements: Well-defined and measurable, but lacks
      stress/load testing and network resilience.
   Environmental requirements: Adequate for development and execution, but
      missing testing, security, and monitoring details.

Make sure you incorporate all the suggestions into the document by the end
of the semester for full credit on this deliverable.

Very nice job on this.
